##### LIBRARIES #####
library(Seurat)
library(clusterProfiler)
library(org.Mm.eg.db)
library(ggplot2)
library(enrichplot)
library(dplyr)
library(forcats)
library(stringr)
library(ggrepel)

##### FIND MARKERS IN MICROGLIA MERGE #####
load("C:/Users/sarto/OneDrive/Desktop/GeneOntology/6MO_MicrogliaMerge_SECONDCLEAN.RData")
markers <- FindAllMarkers(
  MERGE_6M,
  only.pos = TRUE,
  logfc.threshold = 0.1,
  min.pct = 0.1
)

##### GO ENRICHMENT ANALYSIS #####
universe_genes <- rownames(MERGE_6M)
run_go <- function(cluster_id, markers, universe_genes) {
  sig_genes <- markers %>%
    filter(cluster == cluster_id & p_val_adj < 0.05) %>%
    pull(gene) %>%
    unique()
  if (length(sig_genes) == 0) return(NULL)
  
  entrez <- bitr(
    sig_genes,
    fromType = "SYMBOL",
    toType = "ENTREZID",
    OrgDb = org.Mm.eg.db
  ) %>%
    filter(!is.na(ENTREZID))
  
  universe_entrez <- bitr(
    universe_genes,
    fromType = "SYMBOL",
    toType = "ENTREZID",
    OrgDb = org.Mm.eg.db
  ) %>%
    filter(!is.na(ENTREZID))
  
  ego <- enrichGO(
    gene = entrez$ENTREZID,
    universe = universe_entrez$ENTREZID,
    OrgDb = org.Mm.eg.db,
    keyType = "ENTREZID",
    ont = "BP",
    pvalueCutoff = 0.05,
    qvalueCutoff = 0.05,
    pAdjustMethod = "BH"
  )
  
  if (!is.null(ego) && nrow(ego) > 0) {
    simplified <- simplify(ego, cutoff = 0.7, by = "p.adjust", measure = "Wang")
    simplified_df <- as.data.frame(simplified) %>%
      arrange(p.adjust) %>%
      slice_head(n = 10)
    return(simplified_df)
  } else {
    return(NULL)
  }
}

clusters <- 0:3
all_go_results <- lapply(clusters, run_go, markers = markers, universe_genes = universe_genes)

top_terms <- bind_rows(
  lapply(seq_along(all_go_results), function(i) {
    df <- all_go_results[[i]]
    if (!is.null(df)) {
      df$Cluster <- clusters[i]
      return(df)
    } else {
      return(NULL)
    }
  })
)

##### VISUALIZATION #####
top_terms <- top_terms %>%
  mutate(
    GeneRatio = Count / as.numeric(sub("/.*", "", BgRatio)),
    Description_wrapped = str_wrap(Description, width = 60),
    Cluster_Description = paste0("Cluster", Cluster, "_", Description_wrapped)
  ) %>%
  group_by(Cluster) %>%
  group_modify(~ {
    .x %>%
      mutate(Cluster_Description = factor(
        Cluster_Description,
        levels = unique(Cluster_Description[order(GeneRatio)])
      ))
  }) %>%
  ungroup() %>%
  mutate(
    Cluster_label = factor(
      paste0("Cluster", Cluster),
      levels = paste0("Cluster", sort(unique(Cluster)))
    )
  )

ggplot(top_terms, aes(x = GeneRatio, y = Cluster_Description)) +
  geom_point(aes(size = Count, color = p.adjust)) +
  scale_color_gradient(low = "red", high = "blue", name = "Adjusted\np-Value") +
  scale_size(range = c(2, 7), name = "Gene Count") +
  facet_wrap(~Cluster_label, ncol = 1, strip.position = "right", scales = "free_y") +
  scale_y_discrete(
    labels = function(x) {
      sub("^Cluster\\d+_", "", x)
    }
  ) +
  theme_minimal() +
  labs(
    title = "GO Enrichment Analysis (Biological Processes)",
    x = "Gene Ratio",
    y = "GO Terms"
  ) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 14),
    strip.background = element_rect(fill = "#f0f0f0", color = "black"),
    strip.text.y.right = element_text(angle = 270),
    panel.border = element_rect(color = "black", fill = NA),
    axis.text.y = element_text(size = 7, margin = margin(r = 5)),
    axis.title.x = element_text(margin = margin(t = 10)),
    panel.spacing = unit(0.2, "lines")
  )
